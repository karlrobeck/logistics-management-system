/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LoginRouteImport } from './routes/login'
import { Route as DashboardRouteRouteImport } from './routes/dashboard/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as DashboardIndexRouteImport } from './routes/dashboard/index'
import { Route as DashboardCrmProductsIndexRouteImport } from './routes/dashboard/crm/products/index'
import { Route as DashboardCrmOpportunitiesIndexRouteImport } from './routes/dashboard/crm/opportunities/index'
import { Route as DashboardCrmNotificationsIndexRouteImport } from './routes/dashboard/crm/notifications/index'
import { Route as DashboardCrmLeadsIndexRouteImport } from './routes/dashboard/crm/leads/index'
import { Route as DashboardCrmInvoicesIndexRouteImport } from './routes/dashboard/crm/invoices/index'
import { Route as DashboardCrmInteractionsIndexRouteImport } from './routes/dashboard/crm/interactions/index'
import { Route as DashboardCrmContactsIndexRouteImport } from './routes/dashboard/crm/contacts/index'
import { Route as DashboardCrmCompaniesIndexRouteImport } from './routes/dashboard/crm/companies/index'
import { Route as DashboardCrmCasesIndexRouteImport } from './routes/dashboard/crm/cases/index'
import { Route as DashboardCrmCampaignsIndexRouteImport } from './routes/dashboard/crm/campaigns/index'

const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRouteRoute = DashboardRouteRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardIndexRoute = DashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardCrmProductsIndexRoute =
  DashboardCrmProductsIndexRouteImport.update({
    id: '/crm/products/',
    path: '/crm/products/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardCrmOpportunitiesIndexRoute =
  DashboardCrmOpportunitiesIndexRouteImport.update({
    id: '/crm/opportunities/',
    path: '/crm/opportunities/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardCrmNotificationsIndexRoute =
  DashboardCrmNotificationsIndexRouteImport.update({
    id: '/crm/notifications/',
    path: '/crm/notifications/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardCrmLeadsIndexRoute = DashboardCrmLeadsIndexRouteImport.update({
  id: '/crm/leads/',
  path: '/crm/leads/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardCrmInvoicesIndexRoute =
  DashboardCrmInvoicesIndexRouteImport.update({
    id: '/crm/invoices/',
    path: '/crm/invoices/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardCrmInteractionsIndexRoute =
  DashboardCrmInteractionsIndexRouteImport.update({
    id: '/crm/interactions/',
    path: '/crm/interactions/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardCrmContactsIndexRoute =
  DashboardCrmContactsIndexRouteImport.update({
    id: '/crm/contacts/',
    path: '/crm/contacts/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardCrmCompaniesIndexRoute =
  DashboardCrmCompaniesIndexRouteImport.update({
    id: '/crm/companies/',
    path: '/crm/companies/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)
const DashboardCrmCasesIndexRoute = DashboardCrmCasesIndexRouteImport.update({
  id: '/crm/cases/',
  path: '/crm/cases/',
  getParentRoute: () => DashboardRouteRoute,
} as any)
const DashboardCrmCampaignsIndexRoute =
  DashboardCrmCampaignsIndexRouteImport.update({
    id: '/crm/campaigns/',
    path: '/crm/campaigns/',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/crm/campaigns': typeof DashboardCrmCampaignsIndexRoute
  '/dashboard/crm/cases': typeof DashboardCrmCasesIndexRoute
  '/dashboard/crm/companies': typeof DashboardCrmCompaniesIndexRoute
  '/dashboard/crm/contacts': typeof DashboardCrmContactsIndexRoute
  '/dashboard/crm/interactions': typeof DashboardCrmInteractionsIndexRoute
  '/dashboard/crm/invoices': typeof DashboardCrmInvoicesIndexRoute
  '/dashboard/crm/leads': typeof DashboardCrmLeadsIndexRoute
  '/dashboard/crm/notifications': typeof DashboardCrmNotificationsIndexRoute
  '/dashboard/crm/opportunities': typeof DashboardCrmOpportunitiesIndexRoute
  '/dashboard/crm/products': typeof DashboardCrmProductsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/dashboard': typeof DashboardIndexRoute
  '/dashboard/crm/campaigns': typeof DashboardCrmCampaignsIndexRoute
  '/dashboard/crm/cases': typeof DashboardCrmCasesIndexRoute
  '/dashboard/crm/companies': typeof DashboardCrmCompaniesIndexRoute
  '/dashboard/crm/contacts': typeof DashboardCrmContactsIndexRoute
  '/dashboard/crm/interactions': typeof DashboardCrmInteractionsIndexRoute
  '/dashboard/crm/invoices': typeof DashboardCrmInvoicesIndexRoute
  '/dashboard/crm/leads': typeof DashboardCrmLeadsIndexRoute
  '/dashboard/crm/notifications': typeof DashboardCrmNotificationsIndexRoute
  '/dashboard/crm/opportunities': typeof DashboardCrmOpportunitiesIndexRoute
  '/dashboard/crm/products': typeof DashboardCrmProductsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/dashboard': typeof DashboardRouteRouteWithChildren
  '/login': typeof LoginRoute
  '/dashboard/': typeof DashboardIndexRoute
  '/dashboard/crm/campaigns/': typeof DashboardCrmCampaignsIndexRoute
  '/dashboard/crm/cases/': typeof DashboardCrmCasesIndexRoute
  '/dashboard/crm/companies/': typeof DashboardCrmCompaniesIndexRoute
  '/dashboard/crm/contacts/': typeof DashboardCrmContactsIndexRoute
  '/dashboard/crm/interactions/': typeof DashboardCrmInteractionsIndexRoute
  '/dashboard/crm/invoices/': typeof DashboardCrmInvoicesIndexRoute
  '/dashboard/crm/leads/': typeof DashboardCrmLeadsIndexRoute
  '/dashboard/crm/notifications/': typeof DashboardCrmNotificationsIndexRoute
  '/dashboard/crm/opportunities/': typeof DashboardCrmOpportunitiesIndexRoute
  '/dashboard/crm/products/': typeof DashboardCrmProductsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/login'
    | '/dashboard/'
    | '/dashboard/crm/campaigns'
    | '/dashboard/crm/cases'
    | '/dashboard/crm/companies'
    | '/dashboard/crm/contacts'
    | '/dashboard/crm/interactions'
    | '/dashboard/crm/invoices'
    | '/dashboard/crm/leads'
    | '/dashboard/crm/notifications'
    | '/dashboard/crm/opportunities'
    | '/dashboard/crm/products'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/dashboard'
    | '/dashboard/crm/campaigns'
    | '/dashboard/crm/cases'
    | '/dashboard/crm/companies'
    | '/dashboard/crm/contacts'
    | '/dashboard/crm/interactions'
    | '/dashboard/crm/invoices'
    | '/dashboard/crm/leads'
    | '/dashboard/crm/notifications'
    | '/dashboard/crm/opportunities'
    | '/dashboard/crm/products'
  id:
    | '__root__'
    | '/'
    | '/dashboard'
    | '/login'
    | '/dashboard/'
    | '/dashboard/crm/campaigns/'
    | '/dashboard/crm/cases/'
    | '/dashboard/crm/companies/'
    | '/dashboard/crm/contacts/'
    | '/dashboard/crm/interactions/'
    | '/dashboard/crm/invoices/'
    | '/dashboard/crm/leads/'
    | '/dashboard/crm/notifications/'
    | '/dashboard/crm/opportunities/'
    | '/dashboard/crm/products/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRouteRoute: typeof DashboardRouteRouteWithChildren
  LoginRoute: typeof LoginRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/crm/products/': {
      id: '/dashboard/crm/products/'
      path: '/crm/products'
      fullPath: '/dashboard/crm/products'
      preLoaderRoute: typeof DashboardCrmProductsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/crm/opportunities/': {
      id: '/dashboard/crm/opportunities/'
      path: '/crm/opportunities'
      fullPath: '/dashboard/crm/opportunities'
      preLoaderRoute: typeof DashboardCrmOpportunitiesIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/crm/notifications/': {
      id: '/dashboard/crm/notifications/'
      path: '/crm/notifications'
      fullPath: '/dashboard/crm/notifications'
      preLoaderRoute: typeof DashboardCrmNotificationsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/crm/leads/': {
      id: '/dashboard/crm/leads/'
      path: '/crm/leads'
      fullPath: '/dashboard/crm/leads'
      preLoaderRoute: typeof DashboardCrmLeadsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/crm/invoices/': {
      id: '/dashboard/crm/invoices/'
      path: '/crm/invoices'
      fullPath: '/dashboard/crm/invoices'
      preLoaderRoute: typeof DashboardCrmInvoicesIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/crm/interactions/': {
      id: '/dashboard/crm/interactions/'
      path: '/crm/interactions'
      fullPath: '/dashboard/crm/interactions'
      preLoaderRoute: typeof DashboardCrmInteractionsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/crm/contacts/': {
      id: '/dashboard/crm/contacts/'
      path: '/crm/contacts'
      fullPath: '/dashboard/crm/contacts'
      preLoaderRoute: typeof DashboardCrmContactsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/crm/companies/': {
      id: '/dashboard/crm/companies/'
      path: '/crm/companies'
      fullPath: '/dashboard/crm/companies'
      preLoaderRoute: typeof DashboardCrmCompaniesIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/crm/cases/': {
      id: '/dashboard/crm/cases/'
      path: '/crm/cases'
      fullPath: '/dashboard/crm/cases'
      preLoaderRoute: typeof DashboardCrmCasesIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
    '/dashboard/crm/campaigns/': {
      id: '/dashboard/crm/campaigns/'
      path: '/crm/campaigns'
      fullPath: '/dashboard/crm/campaigns'
      preLoaderRoute: typeof DashboardCrmCampaignsIndexRouteImport
      parentRoute: typeof DashboardRouteRoute
    }
  }
}

interface DashboardRouteRouteChildren {
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardCrmCampaignsIndexRoute: typeof DashboardCrmCampaignsIndexRoute
  DashboardCrmCasesIndexRoute: typeof DashboardCrmCasesIndexRoute
  DashboardCrmCompaniesIndexRoute: typeof DashboardCrmCompaniesIndexRoute
  DashboardCrmContactsIndexRoute: typeof DashboardCrmContactsIndexRoute
  DashboardCrmInteractionsIndexRoute: typeof DashboardCrmInteractionsIndexRoute
  DashboardCrmInvoicesIndexRoute: typeof DashboardCrmInvoicesIndexRoute
  DashboardCrmLeadsIndexRoute: typeof DashboardCrmLeadsIndexRoute
  DashboardCrmNotificationsIndexRoute: typeof DashboardCrmNotificationsIndexRoute
  DashboardCrmOpportunitiesIndexRoute: typeof DashboardCrmOpportunitiesIndexRoute
  DashboardCrmProductsIndexRoute: typeof DashboardCrmProductsIndexRoute
}

const DashboardRouteRouteChildren: DashboardRouteRouteChildren = {
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardCrmCampaignsIndexRoute: DashboardCrmCampaignsIndexRoute,
  DashboardCrmCasesIndexRoute: DashboardCrmCasesIndexRoute,
  DashboardCrmCompaniesIndexRoute: DashboardCrmCompaniesIndexRoute,
  DashboardCrmContactsIndexRoute: DashboardCrmContactsIndexRoute,
  DashboardCrmInteractionsIndexRoute: DashboardCrmInteractionsIndexRoute,
  DashboardCrmInvoicesIndexRoute: DashboardCrmInvoicesIndexRoute,
  DashboardCrmLeadsIndexRoute: DashboardCrmLeadsIndexRoute,
  DashboardCrmNotificationsIndexRoute: DashboardCrmNotificationsIndexRoute,
  DashboardCrmOpportunitiesIndexRoute: DashboardCrmOpportunitiesIndexRoute,
  DashboardCrmProductsIndexRoute: DashboardCrmProductsIndexRoute,
}

const DashboardRouteRouteWithChildren = DashboardRouteRoute._addFileChildren(
  DashboardRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRouteRoute: DashboardRouteRouteWithChildren,
  LoginRoute: LoginRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
